---
import "@/ui/globals.css";
import "@fontsource-variable/plus-jakarta-sans";
---

<html lang="es-Co">
  <head>
    <meta charset="utf-8" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Kamilo Vasquez</title>
    <meta
      name="description"
      content={`+${new Date().getFullYear() - 2010} años de experiencia. Ingeniero de software de Barranquilla, Colombia. Especializado en desarrollo de páginas y aplicaciones web.`}
    />
  </head>
  <body>
    <div
      class="fixed inset-0 -z-10 h-full w-full bg-[radial-gradient(#d4d4d8_1px,transparent_1px)] dark:opacity-15 [background-size:16px_16px]"
    >
    </div>
    <slot />
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      const isDark = e.matches;
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    });
</script>
